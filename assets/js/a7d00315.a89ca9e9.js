"use strict";(self.webpackChunkfc_4_e_cat_doc=self.webpackChunkfc_4_e_cat_doc||[]).push([[955],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),d=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(o.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,g=c["".concat(o,".").concat(m)]||c[m]||u[m]||i;return n?a.createElement(g,l(l({ref:t},p),{},{components:n})):a.createElement(g,l({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[c]="string"==typeof e?e:r,l[1]=s;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2226:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const i={id:"api_specs",title:"Specification-API Design",sidebar_position:1},l="Specification: API Design",s={unversionedId:"specifications/api_specs",id:"specifications/api_specs",title:"Specification-API Design",description:"Best Practices, Minimum HTTP Responses for REST APIs",source:"@site/docs/specifications/api.md",sourceDirName:"specifications",slug:"/specifications/api_specs",permalink:"/fc4e-cat-doc/docs/specifications/api_specs",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"api_specs",title:"Specification-API Design",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Specifications",permalink:"/fc4e-cat-doc/docs/category/specifications"}},o={},d=[{value:"Glossary",id:"glossary",level:2},{value:"API Best Practices",id:"api-best-practices",level:2},{value:"HTTP Response Status Codes",id:"http-response-status-codes",level:2}],p={toc:d},c="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"specification-api-design"},"Specification: API Design"),(0,r.kt)("p",null,"Best Practices, Minimum HTTP Responses for REST APIs"),(0,r.kt)("h2",{id:"glossary"},"Glossary"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Term"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Reference"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Resource"),(0,r.kt)("td",{parentName:"tr",align:null},"Resources are fundamental to the concept of REST. A resource is an object that\u2019s important enough to be referenced in itself. A resource has data, relationships to other resources, and methods that operate against it to allow for accessing and manipulating the associated information."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://swagger.io/resources/articles/best-practices-in-api-design/"},"https://swagger.io/resources/articles/best-practices-in-api-design/"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Collection"),(0,r.kt)("td",{parentName:"tr",align:null},"A group of resources is called a collection"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("a",{parentName:"td",href:"https://swagger.io/resources/articles/best-practices-in-api-design/"},"https://swagger.io/resources/articles/best-practices-in-api-design/"))))),(0,r.kt)("h2",{id:"api-best-practices"},"API Best Practices"),(0,r.kt)("p",null,"In general, an effective API design will have the following characteristics ","[5]",":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Easy to read and work with:")," A well designed API will be easy to work with, and its resources and associated operations can quickly be memorised by developers who work with it constantly."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Hard to misuse:")," Implementing and integrating with an API with good design will be a straightforward process, and writing incorrect code will be a less likely outcome."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Complete and concise:")," Finally, a complete API will make it possible for developers to make full- fledged applications against the data you expose. Completeness happens over time usually, and most API designers and developers incrementally build on top of existing APIs. ")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Element"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"JSON"),(0,r.kt)("td",{parentName:"tr",align:null},"REST APIs SHOULD accept JSON for request payload and also send responses as JSON.  To ensure that clients interpret it as such, one SHOULD set Content-Type in the response header to application/json.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Nouns as Endpoints"),(0,r.kt)("td",{parentName:"tr",align:null},"Use nouns instead of verbs in endpoint paths. The HTTP request already indicates the action (GET, POST, PUT, DELETE).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"HTTP Methods"),(0,r.kt)("td",{parentName:"tr",align:null},"Standard actions for HTTP methods: - GET\tUsed to retrieve a representation of a resource. - POST\tUsed to create new new resources and sub-resources - PUT\tUsed to update existing resources - PATCH\tUsed to update existing resources/ may result in new resource - DELETE\tUsed to delete existing resources")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Collections and Resources"),(0,r.kt)("td",{parentName:"tr",align:null},"Collections indicate lists or inventories of resources (individual instances in the collection).")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Examples"),(0,r.kt)("td",{parentName:"tr",align:null},"Provide request and response examples for all GET requests.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Error Handling"),(0,r.kt)("td",{parentName:"tr",align:null},"Handle errors gracefully and return standard error codes.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Filtering and Paging"),(0,r.kt)("td",{parentName:"tr",align:null},"Allow filtering, sorting, and pagination - responses could be very large without these. Use query parameters to aid with this.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Security"),(0,r.kt)("td",{parentName:"tr",align:null},"Maintain good security practices - APIs should be secure. Enforce the principle of least privilege and define user roles.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Caching"),(0,r.kt)("td",{parentName:"tr",align:null},"Cache client-side data to improve performance.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Versioning"),(0,r.kt)("td",{parentName:"tr",align:null},"Create different versions of API if changes may break clients. Versioning can be done according to semantic version (for example, 2.0.6 to indicate major version 2 and the sixth patch).")))),(0,r.kt)("h2",{id:"http-response-status-codes"},"HTTP Response Status Codes"),(0,r.kt)("p",null,"These are the minimum set of responses required for REST APIs."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Response"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Reference"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"200 OK"),(0,r.kt)("td",{parentName:"tr",align:null},"Most common code used to indicate success. The actual response will depend on the request method used."),(0,r.kt)("td",{parentName:"tr",align:null},"[1]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"201 Created"),(0,r.kt)("td",{parentName:"tr",align:null},"The request has been fulfilled and resulted in a new resource being created."),(0,r.kt)("td",{parentName:"tr",align:null},"[1]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"202 Accepted"),(0,r.kt)("td",{parentName:"tr",align:null},"The request has been accepted for processing, but the processing has not been completed."),(0,r.kt)("td",{parentName:"tr",align:null},"[1]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"204 No Content"),(0,r.kt)("td",{parentName:"tr",align:null},"The server has fulfilled the request but does not need to return an entity-body, and might want to return updated metainformation."),(0,r.kt)("td",{parentName:"tr",align:null},"[1]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"304 Not Modified"),(0,r.kt)("td",{parentName:"tr",align:null},"If the client has performed a conditional GET request and access is allowed, but the document has not been modified, the server SHOULD respond with this status code."),(0,r.kt)("td",{parentName:"tr",align:null},"[1]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"400 Bad Request"),(0,r.kt)("td",{parentName:"tr",align:null},"The request could not be understood by the server due to malformed syntax. The client SHOULD NOT repeat the request without modifications."),(0,r.kt)("td",{parentName:"tr",align:null},"[1]",", ","[3]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"401 Unauthorised"),(0,r.kt)("td",{parentName:"tr",align:null},"Similar to 403 Forbidden, but specifically for use when authentication is possible but has failed or not yet been provided. Error code response for missing or invalid authentication token."),(0,r.kt)("td",{parentName:"tr",align:null},"[1]",", ","[3]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"403 Forbidden"),(0,r.kt)("td",{parentName:"tr",align:null},"The server understood the request, but is refusing to fulfil it. Authorization will not help and the request SHOULD NOT be repeated."),(0,r.kt)("td",{parentName:"tr",align:null},"[1]",", ","[3]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"404 Not Found"),(0,r.kt)("td",{parentName:"tr",align:null},"The requested resource could not be found but may be available again in the future. Subsequent requests by the client are permissible."),(0,r.kt)("td",{parentName:"tr",align:null},"[1]",", ","[3]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"409 Conflict"),(0,r.kt)("td",{parentName:"tr",align:null},"Indicates that the request could not be processed because of conflict in the request, such as an edit conflict."),(0,r.kt)("td",{parentName:"tr",align:null},"[1]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"500 Internal Server Error"),(0,r.kt)("td",{parentName:"tr",align:null},"The server encountered an unexpected condition which prevented it from fulfilling the request."),(0,r.kt)("td",{parentName:"tr",align:null},"[1]",", ","[3]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"502 Bad Gateway"),(0,r.kt)("td",{parentName:"tr",align:null},"This indicates an invalid response from an upstream server."),(0,r.kt)("td",{parentName:"tr",align:null},"[3]")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"503 Service Unavailable"),(0,r.kt)("td",{parentName:"tr",align:null},"This indicates that something unexpected happened server side (It can be anything like server overload, some parts of the system failed, etc.)."),(0,r.kt)("td",{parentName:"tr",align:null},"[3]")))))}u.isMDXComponent=!0}}]);